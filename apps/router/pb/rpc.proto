syntax = "proto3";

package K8sGenie.router;

import "apps/router/pb/model.proto";

option go_package = "gitee.com/qiaogy91/K8sGenie/apps/router";


message Empty {}

service Rpc {
    rpc CreateTable (Empty) returns (Empty);

    rpc CreateRoute (Spec) returns (Router);
    rpc DeleteRoute (DeleteRouteReq) returns (Router);
    rpc QueryRoute (QueryRouteReq) returns (RouterSet);
    rpc UpdateRoute(UpdateRouteReq) returns (Router);

    rpc DescRoute(DescRouteReq)returns (Router);

    rpc UrgentChange(UrgentChangeReq)returns (Router);
    // 告警路由
    rpc AlertRoute (AlertRouteReq) returns (Router);
}

message DescRouteReq {
    // @gotags: validate:"required"
    string id = 1;
}

message UrgentChangeReq {
    // @gotags: validate:"required"
    string id = 1;
    bool urgent_call = 2;
}
message UpdateRouteReq {
    // @gotags: validate:"required"
    string id = 1;
    // @gotags: validate:"required"
    Spec spec = 2;
}

message DeleteRouteReq {
    // @gotags: validate:"required"
    string id = 1;
}

message AlertRouteReq {
    string cluster_name = 1;
    string namespace_name = 2;
}

enum QUERY_TYPE {
    QUERY_TYPE_UNSPECIFIED = 0;
    QUERY_TYPE_ALL = 1;
    QUERY_TYPE_BY_CLUSTER_CODE = 2;
    QUERY_TYPE_BY_PROJECT_LINE = 3;
    QUERY_TYPE_BY_ID = 4;
}

message QueryRouteReq {
    // @gotags: validate:"required" json:"type"
    QUERY_TYPE type = 1;
    // @gotags: json:"keyword"
    string keyword = 2;
}

message RouterSet {
    int64 count = 1;
    repeated Router items = 2;
}